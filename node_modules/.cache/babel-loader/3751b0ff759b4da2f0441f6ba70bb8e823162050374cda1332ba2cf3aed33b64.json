{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GitHub\\\\react-app-1\\\\src\\\\components\\\\Movies.jsx\";\nimport React from \"react\";\nimport Movie from \"./Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Movies extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n  componentDidMount() {\n    fetch(\"http://www.omdbapi.com/?s=matrix&apikey=36391301&page=1-3\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0418\\u0434\\u0435\\u0442 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [items.map(item => /*#__PURE__*/_jsxDEV(Movie, {\n          title: item.Title,\n          year: item.Year,\n          src: item.Poster\n        }, item.imdbID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n  componentDidMount() {\n    fetch(\"http://www.omdbapi.com/?s=matrix&apikey=36391301&page=1-3\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    },\n    // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n    // чтобы не перехватывать исключения из ошибок в самих компонентах.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" \", item.price]\n        }, item.imdbID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this);\n    }\n  }\n}\nexport default MyComponent;","map":{"version":3,"names":["React","Movie","jsxDEV","_jsxDEV","Movies","Component","constructor","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render","children","message","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","map","item","title","Title","year","Year","src","Poster","imdbID","MyComponent","props","name","price"],"sources":["Z:/GitHub/react-app-1/src/components/Movies.jsx"],"sourcesContent":["import React from \"react\"\r\nimport Movie from \"./Movie\"\r\n\r\nclass Movies extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://www.omdbapi.com/?s=matrix&apikey=36391301&page=1-3\")\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                items: result.items\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n      }\r\n\r\n    render() {\r\n        const {error, isLoaded, items} = this.state;\r\n        if(error){\r\n            return <div>Ошибка: {error.message}</div>\r\n        } else if(!isLoaded){\r\n            return <div>Идет загрузка...</div>\r\n        } else{\r\n            return (\r\n                <React.Fragment>\r\n                    {items.map(item => (\r\n                        <Movie title={item.Title} key={item.imdbID} year={item.Year} src={item.Poster}/>\r\n                    ))};\r\n                </React.Fragment>\r\n            );\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nclass MyComponent extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: []\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      fetch(\"http://www.omdbapi.com/?s=matrix&apikey=36391301&page=1-3\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result.items\r\n            });\r\n          },\r\n          // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n          // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n  \r\n    render() {\r\n      const { error, isLoaded, items } = this.state;\r\n      if (error) {\r\n        return <div>Ошибка: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>Загрузка...</div>;\r\n      } else {\r\n        return (\r\n          <ul>\r\n            {items.map(item => (\r\n              <li key={item.imdbID}>\r\n                {item.name} {item.price}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n\r\nexport default MyComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}