{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GitHub\\\\react-app-1\\\\src\\\\layout\\\\Main.jsx\";\nimport React from \"react\";\nimport Movies from \"../components/Movies\";\nimport Search from \"../components/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      loading: true\n    };\n    this.filmSearch = (data, type = \"all\") => {\n      this.setState({\n        loading: true\n      });\n      let str = '';\n      if (data === '') {\n        data = \"matrix\";\n      }\n      if (type === \"all\") {\n        str = `http://www.omdbapi.com/?s=${data}&apikey=36391301`;\n      } else {\n        str = `http://www.omdbapi.com/?s=${data}&apikey=36391301&type=${type}`;\n      }\n      fetch(str).then(response => response.json()).then(data => this.setState({\n        movies: data.Search,\n        loading: false\n      }));\n    };\n  }\n  componentDidMount() {\n    fetch(\"http://www.omdbapi.com/?s=matrix&apikey=36391301\").then(response => response.json()).then(data => this.setState({\n      movies: data.Search,\n      loading: false\n    })).catch(err => {\n      cons;\n    });\n  }\n  render() {\n    const {\n      movies,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container content\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        filmSearch: this.filmSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), !loading ? /*#__PURE__*/_jsxDEV(Movies, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"indeterminate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 86\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 60\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Main;","map":{"version":3,"names":["React","Movies","Search","jsxDEV","_jsxDEV","Main","Component","constructor","args","state","movies","loading","filmSearch","data","type","setState","str","fetch","then","response","json","componentDidMount","catch","err","cons","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["Z:/GitHub/react-app-1/src/layout/Main.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Movies from \"../components/Movies\"\r\nimport Search from \"../components/Search\"\r\n\r\nclass Main extends React.Component {\r\n    state = {\r\n        movies: [],\r\n        loading: true,\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://www.omdbapi.com/?s=matrix&apikey=36391301\")\r\n        .then(response => response.json())\r\n        .then(data => this.setState({movies: data.Search, loading: false}))\r\n        .catch((err) => {\r\n            cons\r\n        })\r\n    }\r\n\r\n    filmSearch = (data, type = \"all\") => {\r\n        this.setState({loading: true})\r\n        let str = ''\r\n        if(data ===''){\r\n            data = \"matrix\"\r\n        }\r\n        if(type === \"all\"){\r\n            str = `http://www.omdbapi.com/?s=${data}&apikey=36391301`\r\n        } else{\r\n            str = `http://www.omdbapi.com/?s=${data}&apikey=36391301&type=${type}`\r\n        }\r\n        fetch(str)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({movies: data.Search, loading: false}))\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading} = this.state;\r\n        return (\r\n            <main className=\"container content\">\r\n                <Search filmSearch={this.filmSearch}/>\r\n                {!loading ? (<Movies movies={movies}/>) : (<div className=\"progress\"><div className=\"indeterminate\"></div></div>)}\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,IAAI,SAASL,KAAK,CAACM,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC/BC,KAAK,GAAG;MACJC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACb,CAAC;IAAA,KAWDC,UAAU,GAAG,CAACC,IAAI,EAAEC,IAAI,GAAG,KAAK,KAAK;MACjC,IAAI,CAACC,QAAQ,CAAC;QAACJ,OAAO,EAAE;MAAI,CAAC,CAAC;MAC9B,IAAIK,GAAG,GAAG,EAAE;MACZ,IAAGH,IAAI,KAAI,EAAE,EAAC;QACVA,IAAI,GAAG,QAAQ;MACnB;MACA,IAAGC,IAAI,KAAK,KAAK,EAAC;QACdE,GAAG,GAAG,6BAA6BH,IAAI,kBAAkB;MAC7D,CAAC,MAAK;QACFG,GAAG,GAAG,6BAA6BH,IAAI,yBAAyBC,IAAI,EAAE;MAC1E;MACAG,KAAK,CAACD,GAAG,CAAC,CACTE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACL,IAAI,IAAI,IAAI,CAACE,QAAQ,CAAC;QAACL,MAAM,EAAEG,IAAI,CAACX,MAAM;QAAES,OAAO,EAAE;MAAK,CAAC,CAAC,CAAC;IACvE,CAAC;EAAA;EAvBDU,iBAAiBA,CAAA,EAAG;IAChBJ,KAAK,CAAC,kDAAkD,CAAC,CACxDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACL,IAAI,IAAI,IAAI,CAACE,QAAQ,CAAC;MAACL,MAAM,EAAEG,IAAI,CAACX,MAAM;MAAES,OAAO,EAAE;IAAK,CAAC,CAAC,CAAC,CAClEW,KAAK,CAAEC,GAAG,IAAK;MACZC,IAAI;IACR,CAAC,CAAC;EACN;EAkBAC,MAAMA,CAAA,EAAG;IACL,MAAM;MAACf,MAAM;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACF,KAAK;IACpC,oBACIL,OAAA;MAAMsB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC/BvB,OAAA,CAACF,MAAM;QAACU,UAAU,EAAE,IAAI,CAACA;MAAW;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACrC,CAACpB,OAAO,gBAAIP,OAAA,CAACH,MAAM;QAACS,MAAM,EAAEA;MAAO;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,gBAAK3B,OAAA;QAAKsB,SAAS,EAAC,UAAU;QAAAC,QAAA,eAACvB,OAAA;UAAKsB,SAAS,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/G,CAAC;EAEf;AACJ;AAEA,eAAe1B,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}